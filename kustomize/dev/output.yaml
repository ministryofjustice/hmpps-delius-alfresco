apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-repository
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-repository-0.1.2
  name: alfresco-repo-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-search-enterprise
    app.kubernetes.io/version: 4.0.0.1
    helm.sh/chart: alfresco-search-enterprise-3.0.3
  name: alfresco-search-enterprise-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: share
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: share-0.2.1
  name: share-sa
---
apiVersion: v1
data:
  alfresco-global.properties: |
    deployment.method=HELM_CHART
    alfresco.cluster.enabled=true
    alfresco.host=hmpps-delius-alfresco-preprod.apps.live.cloud-platform.service.justice.gov.uk
    alfresco.protocol=https
    alfresco.port=443
    aos.baseUrlOverwrite=https://hmpps-delius-alfresco-preprod.apps.live.cloud-platform.service.justice.gov.uk/alfresco/aos
    csrf.filter.origin=https://hmpps-delius-alfresco-preprod.apps.live.cloud-platform.service.justice.gov.uk
    csrf.filter.referer=https://hmpps-delius-alfresco-preprod.apps.live.cloud-platform.service.justice.gov.uk/.*
    share.protocol=https
    share.host=hmpps-delius-alfresco-preprod.apps.live.cloud-platform.service.justice.gov.uk
    share.port=443
    local.transform.service.enabled=true
    transform.service.enabled=false
    localTransform.core-aio.url=
    localTransform.pdfrenderer.url=http://alfresco-content-services-pdfrenderer
    localTransform.imagemagick.url=http://alfresco-content-services-imagemagick
    localTransform.libreoffice.url=http://alfresco-content-services-libreoffice
    localTransform.tika.url=http://alfresco-content-services-tika
    localTransform.misc.url=http://alfresco-content-services-transform-misc
    events.subsystem.autoStart=false

    #Zaizi additions
    zaizi.noms.root.folder=NOMS
    zaizi.noms.crn.pattern=([A-Z])([0-9]{3})([0-9]{3})
    zaizi.noms.invalidCharacters=\\/:*\"\"<>|?!$#%^&

    spg.ndelius.users=N00
    spg.crc.users=C01,C02,C03,C04,C05,C06,C07,C08,C09,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21,C22,C23

    # The User to Schema Cache
    cache.spgUserToSchemaVersionCache.tx.maxItems=100
    cache.spgUserToSchemaVersionCache.tx.statsEnabled=${caches.tx.statsEnabled}
    cache.spgUserToSchemaVersionCache.maxItems=500
    cache.spgUserToSchemaVersionCache.timeToLiveSeconds=0
    cache.spgUserToSchemaVersionCache.maxIdleSeconds=0
    cache.spgUserToSchemaVersionCache.cluster.type=local
    cache.spgUserToSchemaVersionCache.backup-count=1
    cache.spgUserToSchemaVersionCache.eviction-policy=LRU
    cache.spgUserToSchemaVersionCache.eviction-percentage=25
    cache.spgUserToSchemaVersionCache.merge-policy=hz.ADD_NEW_ENTRY
    cache.spgUserToSchemaVersionCache.readBackupData=false
    cache.spgUserToSchemaVersionCache.cluster.type=invalidating

    # Notify when a messaging to be sent to MPX taking morethan specified time. Value is in milliseconds.
    message.mpx.log.messageSendingTakenMorethan=1000

    zaizi.noms.mpx.schema.version=0-9-9
    zaizi.noms.mpx.schema.date=2016-09-05
    messaging.events.nspg.schema=classpath:SPG-XML_Message_Root-V0-9-9.xsd

    zaizi.noms.mpx.schema2.version=0-9-10
    zaizi.noms.mpx.schema2.date=2017-03-30
    messaging.events.nspg2.schema=classpath:SPG-XML_Message_Root-V0-9-10-2.xsd

    zaizi.noms.mpx.schema.911.version=0-9-11
    zaizi.noms.mpx.schema.911.date=2017-09-04
    messaging.events.nspg.911.schema=classpath:SPG-XML_Message_Root-V0-9-11.xsd

    zaizi.noms.mpx.schema.912.version=0-9-12
    zaizi.noms.mpx.schema.912.date=2017-12-05
    messaging.events.nspg.912.schema=classpath:SPG-XML_Message_Root-V0-9-12.xsd

    zaizi.noms.mpx.schema.913.version=0-9-13
    zaizi.noms.mpx.schema.913.date=2018-02-08
    messaging.events.nspg.913.schema=classpath:SPG-XML_Message_Root-V0-9-13.xsd

    zaizi.noms.mpx.schema.914.version=0-9-14
    zaizi.noms.mpx.schema.914.date=2019-10-21
    messaging.events.nspg.914.schema=classpath:SPG-XML_Message_Root-V0-9-14.xsd

    # NSPG Administration Groups Patch
    patch.nspg.administration.deferred=false
    patch.nspg.administration.roles.cronExpression=0 0 0 ? 1 1 2030
    patch.nspg.administration.roles.startDelay=0
kind: ConfigMap
metadata:
  name: alf-prop-config-map
---
apiVersion: v1
data:
  CATALINA_OPTS: -Ddeployment.method=HELM_CHART -Ddb.url="$DATABASE_URL" -Ddb.username=${DATABASE_USERNAME}
    -Ddb.password=${DATABASE_PASSWORD} -Ddb.driver="${DATABASE_DRIVER}" -Dmessaging.broker.url="$BROKER_URL"
    -Dmessaging.broker.username="$BROKER_USERNAME" -Dmessaging.broker.password="$BROKER_PASSWORD"
    -Dindex.subsystem.name="$SEARCH_FLAVOR" -Dmetadata-keystore.password="$ENC_METADATA_STOREPASS"
    -Dmetadata-keystore.metadata.password="$ENC_METADATA_KEYPASS"   -Delasticsearch.host=$SEARCH_HOST
    -Delasticsearch.port=$SEARCH_PORT -Delasticsearch.secureComms=$SEARCH_SECURECOMMS
    -Delasticsearch.user=$ELASTICSEARCH_USERNAME -Delasticsearch.password=$ELASTICSEARCH_PASSWORD
    -Delasticsearch.createIndexIfNotExists=true -Ds3.accessKey="$ACCESSKEY" -Ds3.secretKey="$SECRETKEY"
    -Ds3.bucketName="$BUCKET_NAME" -Dsfs.url="$SFS_URL" -Dimap.server.enabled=false
    -Dimap.server.port=1143 -Demail.server.enabled=false -Demail.inbound.enabled=false
    -Demail.server.port=1025 -Ds3.bucketLocation=eu-west-2
  JAVA_OPTS: -Dencryption.keystore.type=JCEKS -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
    -Dencryption.keyAlgorithm=DESede -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
    -Dmetadata-keystore.aliases=metadata -Dmetadata-keystore.metadata.algorithm=DESede
    -Dindex.subsystem.name=elasticsearch -Delasticsearch.indexName=alfresco -Delasticsearch.createIndexIfNotExists=true
    -Dtransform.service.enabled=true -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
    -Dencryption.keystore.type=JCEKS -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
    -Dencryption.keyAlgorithm=DESede -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
    -Dmetadata-keystore.aliases=metadata -Dmetadata-keystore.metadata.algorithm=DESede
    -Dsystem.workflow.engine.activiti.enabled=false -Dsystem.prop_table_cleaner.algorithm=V2
    -Dsystem.delete_not_exists.read_only=false -Dsystem.delete_not_exists.timeout_seconds=3600
    -Dfilecontentstore.subsystem.name=S3
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-repository
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-repository-0.1.2
  name: alfresco-content-services-alfresco-opts
---
apiVersion: v1
data:
  JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  initialDelaySeconds: "10"
  livenessPercent: "150"
  livenessTransformPeriodSeconds: "600"
  maxTransformSeconds: "900"
  maxTransforms: "10000"
  path: /live
  periodSeconds: "20"
  timeoutSeconds: "10"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: imagemagick
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-imagemagick-configmap
---
apiVersion: v1
data:
  JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  initialDelaySeconds: "10"
  livenessPercent: "250"
  livenessTransformPeriodSeconds: "600"
  maxTransformSeconds: "1800"
  maxTransforms: "99999"
  path: /live
  periodSeconds: "20"
  timeoutSeconds: "10"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: libreoffice
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-libreoffice-configmap
---
apiVersion: v1
data:
  JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  initialDelaySeconds: "10"
  livenessPercent: "150"
  livenessTransformPeriodSeconds: "600"
  maxTransformSeconds: "1200"
  maxTransforms: "10000"
  path: /live
  periodSeconds: "20"
  timeoutSeconds: "10"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pdfrenderer
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-pdfrenderer-configmap
---
apiVersion: v1
data:
  JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  initialDelaySeconds: "30"
  livenessPercent: "400"
  livenessTransformPeriodSeconds: "600"
  maxTransformSeconds: "1800"
  maxTransforms: "10000"
  path: /live
  periodSeconds: "20"
  timeoutSeconds: "10"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tika
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-tika-configmap
---
apiVersion: v1
data:
  JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  initialDelaySeconds: "10"
  livenessPercent: "400"
  livenessTransformPeriodSeconds: "600"
  maxTransformSeconds: "1800"
  maxTransforms: "10000"
  path: /live
  periodSeconds: "20"
  timeoutSeconds: "10"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: transform-misc
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-transform-misc-configmap
---
apiVersion: v1
data:
  IMAGEMAGICK_URL: http://alfresco-content-services-imagemagick:80
  JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  LIBREOFFICE_URL: http://alfresco-content-services-libreoffice:80
  MISC_URL: http://alfresco-content-services-transform-misc:80
  PDF_RENDERER_URL: http://alfresco-content-services-pdfrenderer:80
  TIKA_URL: http://alfresco-content-services-tika:80
  initialDelaySeconds: "20"
  path: /actuator/health
  periodSeconds: "30"
  timeoutSeconds: "10"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: transform-router
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-transform-router-configmap
---
apiVersion: v1
data:
  ATS_URL: http://alfresco-content-services-transform-router/transform/config
  BROKER_URL: failover:(nio+ssl://b-5c25f40d-edd0-49e9-95a0-01ea61b5444f-1.mq.eu-west-2.amazonaws.com:61617)?initialReconnectDelay=1000&maxReconnectAttempts=-1&useExponentialBackOff=true&maxReconnectDelay=30000?reconnectSupported=true
  DATABASE_DRIVER: org.postgresql.Driver
  DATABASE_URL: jdbc:postgresql://cloud-platform-9a95f5dfd5d72b23.cdwm328dlye6.eu-west-2.rds.amazonaws.com:5432/alfresco
  REPOSITORY_URL: http://alfresco-content-services-alfresco-repository:80/alfresco
  SEARCH_FLAVOR: elasticsearch
  SEARCH_HOST: opensearch-proxy-service-cloud-platform-e7170919.hmpps-delius-alfresco-dev.svc.cluster.local
  SEARCH_PORT: "8080"
  SEARCH_SECURECOMMS: none
  SEARCH_URL: http://opensearch-proxy-service-cloud-platform-e7170919.hmpps-delius-alfresco-dev.svc.cluster.local:8080
  SFS_URL: https://alf-sfs.dev.delius-core.hmpps-development.modernisation-platform.service.justice.gov.uk/
  SFS_URL_API: https://alf-sfs.dev.delius-core.hmpps-development.modernisation-platform.service.justice.gov.uk/alfresco/api/-default-/private/sfs/versions/1/file/
  repo_svc_name: alfresco-content-services-alfresco-repository
  repo_svc_port: "80"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-content-services
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-content-services-7.0.3
  name: alfresco-infrastructure
---
apiVersion: v1
data:
  alfresco-global.properties: "deployment.method=HELM_CHART\nalfresco.cluster.enabled=true\nalfresco.host=hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk\nalfresco.protocol=https\nalfresco.port=443\naos.baseUrlOverwrite=https://hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk/alfresco/aos\ncsrf.filter.origin=https://hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk\ncsrf.filter.referer=https://hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk/.*\nshare.protocol=https\nshare.host=hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk\nshare.port=443\nlocal.transform.service.enabled=true\ntransform.service.enabled=false
    \   \nlocalTransform.core-aio.url=\nlocalTransform.pdfrenderer.url=http://alfresco-content-services-pdfrenderer\nlocalTransform.imagemagick.url=http://alfresco-content-services-imagemagick\nlocalTransform.libreoffice.url=http://alfresco-content-services-libreoffice\nlocalTransform.tika.url=http://alfresco-content-services-tika\nlocalTransform.misc.url=http://alfresco-content-services-transform-misc\nevents.subsystem.autoStart=false\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-content-services
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-content-services-7.0.3
  name: repository
---
apiVersion: v1
data:
  SEARCH_PASSWORD: ""
  SEARCH_USERNAME: ""
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-content-services
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-content-services-7.0.3
  name: alfresco-search-secret
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-repository
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-repository-0.1.2
  name: alfresco-content-services-alfresco-repository
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: alfresco-repository
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: imagemagick
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-imagemagick
spec:
  ports:
  - name: imagemagick
    port: 80
    targetPort: 8090
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: imagemagick
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: libreoffice
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-libreoffice
spec:
  ports:
  - name: libreoffice
    port: 80
    targetPort: 8090
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: libreoffice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pdfrenderer
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-pdfrenderer
spec:
  ports:
  - name: pdfrenderer
    port: 80
    targetPort: 8090
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: pdfrenderer
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: share
  name: alfresco-content-services-share
spec:
  ports:
  - name: share
    port: 80
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: share
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tika
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-tika
spec:
  ports:
  - name: tika
    port: 80
    targetPort: 8090
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: tika
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: transform-misc
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-transform-misc
spec:
  ports:
  - name: transformmisc
    port: 80
    targetPort: 8090
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: transform-misc
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: transform-router
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-transform-router
spec:
  ports:
  - name: transform-router
    port: 80
    protocol: TCP
    targetPort: 8095
  selector:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: transform-router
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: indexing-mediation
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-search-enterprise
    app.kubernetes.io/version: 4.0.0.1
    helm.sh/chart: alfresco-search-enterprise-3.0.3
  name: alfresco-search-enterprise-mediation-headless
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8080
  selector:
    app.kubernetes.io/component: indexing-mediation
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/name: alfresco-search-enterprise
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-repository
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-repository-0.1.2
  name: alfresco-content-services-alfresco-repository
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: alfresco-repository
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: alfresco-repository
    spec:
      containers:
      - env:
        - name: ENC_METADATA_STOREPASS
          value: mp6yc0UD9e
        - name: ENC_METADATA_KEYPASS
          value: oKIWzVdEdA
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: alfresco-infrastructure
        - name: DATABASE_DRIVER
          valueFrom:
            configMapKeyRef:
              key: DATABASE_DRIVER
              name: alfresco-infrastructure
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DATABASE_PASSWORD
              name: rds-instance-output
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              key: DATABASE_USERNAME
              name: rds-instance-output
        - name: ACCESSKEY
          valueFrom:
            secretKeyRef:
              key: ACCESSKEY
              name: s3-bucket-output
              optional: true
        - name: SECRETKEY
          valueFrom:
            secretKeyRef:
              key: SECRETKEY
              name: s3-bucket-output
              optional: true
        - name: BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: BUCKET_NAME
              name: s3-bucket-output
              optional: true
        - name: SFS_URL
          valueFrom:
            secretKeyRef:
              key: SFS_URL
              name: sfs-url
              optional: true
        - name: SEARCH_FLAVOR
          valueFrom:
            configMapKeyRef:
              key: SEARCH_FLAVOR
              name: alfresco-infrastructure
        - name: SEARCH_HOST
          valueFrom:
            configMapKeyRef:
              key: SEARCH_HOST
              name: alfresco-infrastructure
        - name: SEARCH_PORT
          valueFrom:
            configMapKeyRef:
              key: SEARCH_PORT
              name: alfresco-infrastructure
        - name: SEARCH_SECURECOMMS
          valueFrom:
            configMapKeyRef:
              key: SEARCH_SECURECOMMS
              name: alfresco-infrastructure
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              key: SEARCH_USERNAME
              name: alfresco-search-secret
              optional: true
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SEARCH_PASSWORD
              name: alfresco-search-secret
              optional: true
        - name: SOLR_SECRET
          valueFrom:
            secretKeyRef:
              key: SOLR_SECRET
              name: alfresco-search-secret
              optional: true
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              key: BROKER_URL
              name: alfresco-infrastructure
        - name: BROKER_USERNAME
          valueFrom:
            secretKeyRef:
              key: BROKER_USERNAME
              name: amazon-mq-broker-secret
              optional: true
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: BROKER_PASSWORD
              name: amazon-mq-broker-secret
              optional: true
        envFrom:
        - configMapRef:
            name: alfresco-content-services-alfresco-opts
        image: 754256621582.dkr.ecr.eu-west-2.amazonaws.com/hmpps-migration/alfresco-content-repository:release_7.3.2_elasticsearch-r5.0.2-content-latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /alfresco/api/-default-/public/alfresco/versions/1/probes/-live-
            port: http
          initialDelaySeconds: 130
          periodSeconds: 20
          timeoutSeconds: 15
        name: alfresco-repository
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 5701
          name: hazelcast
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-
            port: http
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: 250m
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 10
          httpGet:
            path: /alfresco/api/-default-/public/alfresco/versions/1/probes/-live-
            port: http
          periodSeconds: 30
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /usr/local/tomcat/alf_data
          name: data
          subPath: alfresco-content-services/repository-data
        - mountPath: /usr/local/tomcat/shared/classes/alfresco-global.properties
          name: global-properties
          readOnly: true
          subPath: alfresco-global.properties
        - mountPath: /usr/local/tomcat/shared/classes/alfresco/extension/license
          name: acs-license
          readOnly: true
      imagePullSecrets:
      - name: quay-registry-secret
      initContainers:
      - command:
        - sh
        - -c
        - |
          NCTARGET=$(echo DATABASE_URL | awk -F ';|/' '{print $3}')
          if [[ "$NCTARGET" == *":"* ]]; then
            until nc -vw1 $NCTARGET; do
              sleep 2
            done
          else echo "No port in jdbc URL $DATABASE_URL. Can't guess it so skipping db status check"
          fi
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: alfresco-infrastructure
        - name: DATABASE_DRIVER
          valueFrom:
            configMapKeyRef:
              key: DATABASE_DRIVER
              name: alfresco-infrastructure
        image: busybox:1.35
        imagePullPolicy: IfNotPresent
        name: wait-db-ready
        resources:
          limits:
            cpu: "0.25"
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 33000
      serviceAccountName: alfresco-repo-sa
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir:
          sizeLimit: 100Gi
        name: data
      - configMap:
          defaultMode: 256
          items:
          - key: alfresco-global.properties
            path: alfresco-global.properties
          name: alf-prop-config-map
        name: global-properties
      - name: acs-license
        secret:
          defaultMode: 256
          items:
          - key: Alfresco-ent73-NOMSNationalOffenderManagementService-Expires10.03.2025.lic
            path: license.lic
          optional: true
          secretName: alfresco-license
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: content-indexing
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-search-enterprise
    app.kubernetes.io/version: 4.0.0.1
    helm.sh/chart: alfresco-search-enterprise-3.0.3
  name: alfresco-content-services-alfresco-search-enterprise-content
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: content-indexing
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: alfresco-search-enterprise
  template:
    metadata:
      annotations:
        checksum/secret-broker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret-database: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret-elasticsearch: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/component: content-indexing
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: alfresco-search-enterprise
    spec:
      containers:
      - env:
        - name: SPRING_ACTIVEMQ_POOL_ENABLED
          value: "true"
        - name: SPRING_ACTIVEMQ_POOL_MAXCONNECTIONS
          value: "200"
        - name: SPRING_ACTIVEMQ_POOL_IDLE_TIMEOUT
          value: "30000"
        - name: SPRING_ACTIVEMQ_POOL_EXPIRY_TIMEOUT
          value: "60000"
        - name: JAVA_OPTS
          value: -Dspring.activemq.packages.trustAll=true
        - name: ALFRESCO_SHAREDFILESTORE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: BROKER_USERNAME
          valueFrom:
            secretKeyRef:
              key: BROKER_USERNAME
              name: amazon-mq-broker-secret
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: BROKER_PASSWORD
              name: amazon-mq-broker-secret
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              key: BROKER_URL
              name: alfresco-infrastructure
        - name: SPRING_ACTIVEMQ_BROKERURL
          value: $(BROKER_URL)
        - name: SPRING_ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: SPRING_ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        - name: SPRING_ELASTICSEARCH_REST_USERNAME
          valueFrom:
            secretKeyRef:
              key: SEARCH_USERNAME
              name: alfresco-search-secret
        - name: SPRING_ELASTICSEARCH_REST_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SEARCH_PASSWORD
              name: alfresco-search-secret
        - name: SPRING_ELASTICSEARCH_REST_URIS
          valueFrom:
            configMapKeyRef:
              key: SEARCH_URL
              name: alfresco-infrastructure
        - name: ELASTICSEARCH_INDEXNAME
          value: alfresco
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_REFRESHTIME
          value: 0 0 * * * *
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_ENABLED
          value: "true"
        - name: ALFRESCO_PATHINDEXINGCOMPONENT_ENABLED
          value: "true"
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: ATS_URL
              name: alfresco-infrastructure
        image: quay.io/alfresco/alfresco-elasticsearch-live-indexing-content:3.2.0.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 60
        name: alfresco-search-enterprise-content
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 60
        resources:
          limits:
            cpu: "2"
            memory: 2048Mi
          requests:
            cpu: "0.5"
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        runAsUser: 33099
      serviceAccountName: alfresco-search-enterprise-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: metadata-indexing
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-search-enterprise
    app.kubernetes.io/version: 4.0.0.1
    helm.sh/chart: alfresco-search-enterprise-3.0.3
  name: alfresco-content-services-alfresco-search-enterprise-metadata
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: metadata-indexing
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: alfresco-search-enterprise
  template:
    metadata:
      annotations:
        checksum/secret-broker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret-database: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret-elasticsearch: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/component: metadata-indexing
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: alfresco-search-enterprise
    spec:
      containers:
      - env:
        - name: SPRING_ACTIVEMQ_POOL_ENABLED
          value: "true"
        - name: SPRING_ACTIVEMQ_POOL_MAXCONNECTIONS
          value: "100"
        - name: SPRING_ACTIVEMQ_POOL_IDLE_TIMEOUT
          value: "30000"
        - name: SPRING_ACTIVEMQ_POOL_EXPIRY_TIMEOUT
          value: "60000"
        - name: JAVA_OPTS
          value: -Dspring.activemq.packages.trustAll=true
        - name: ALFRESCO_SHAREDFILESTORE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: BROKER_USERNAME
          valueFrom:
            secretKeyRef:
              key: BROKER_USERNAME
              name: amazon-mq-broker-secret
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: BROKER_PASSWORD
              name: amazon-mq-broker-secret
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              key: BROKER_URL
              name: alfresco-infrastructure
        - name: SPRING_ACTIVEMQ_BROKERURL
          value: $(BROKER_URL)
        - name: SPRING_ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: SPRING_ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        - name: SPRING_ELASTICSEARCH_REST_USERNAME
          valueFrom:
            secretKeyRef:
              key: SEARCH_USERNAME
              name: alfresco-search-secret
        - name: SPRING_ELASTICSEARCH_REST_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SEARCH_PASSWORD
              name: alfresco-search-secret
        - name: SPRING_ELASTICSEARCH_REST_URIS
          valueFrom:
            configMapKeyRef:
              key: SEARCH_URL
              name: alfresco-infrastructure
        - name: ELASTICSEARCH_INDEXNAME
          value: alfresco
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_REFRESHTIME
          value: 0 0 * * * *
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_ENABLED
          value: "true"
        - name: ALFRESCO_PATHINDEXINGCOMPONENT_ENABLED
          value: "true"
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: ATS_URL
              name: alfresco-infrastructure
        image: quay.io/alfresco/alfresco-elasticsearch-live-indexing-metadata:3.2.0.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 60
        name: alfresco-search-enterprise-metadata
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 60
        resources:
          limits:
            cpu: "2"
            memory: 2048Mi
          requests:
            cpu: "0.5"
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        runAsUser: 33099
      serviceAccountName: alfresco-search-enterprise-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: path-indexing
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-search-enterprise
    app.kubernetes.io/version: 4.0.0.1
    helm.sh/chart: alfresco-search-enterprise-3.0.3
  name: alfresco-content-services-alfresco-search-enterprise-path
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: path-indexing
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: alfresco-search-enterprise
  template:
    metadata:
      annotations:
        checksum/secret-broker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret-database: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret-elasticsearch: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/component: path-indexing
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: alfresco-search-enterprise
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Dspring.activemq.packages.trustAll=true
        - name: ALFRESCO_SHAREDFILESTORE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: BROKER_USERNAME
          valueFrom:
            secretKeyRef:
              key: BROKER_USERNAME
              name: amazon-mq-broker-secret
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: BROKER_PASSWORD
              name: amazon-mq-broker-secret
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              key: BROKER_URL
              name: alfresco-infrastructure
        - name: SPRING_ACTIVEMQ_BROKERURL
          value: $(BROKER_URL)
        - name: SPRING_ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: SPRING_ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        - name: SPRING_ELASTICSEARCH_REST_USERNAME
          valueFrom:
            secretKeyRef:
              key: SEARCH_USERNAME
              name: alfresco-search-secret
        - name: SPRING_ELASTICSEARCH_REST_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SEARCH_PASSWORD
              name: alfresco-search-secret
        - name: SPRING_ELASTICSEARCH_REST_URIS
          valueFrom:
            configMapKeyRef:
              key: SEARCH_URL
              name: alfresco-infrastructure
        - name: ELASTICSEARCH_INDEXNAME
          value: alfresco
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_REFRESHTIME
          value: 0 0 * * * *
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_ENABLED
          value: "true"
        - name: ALFRESCO_PATHINDEXINGCOMPONENT_ENABLED
          value: "true"
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: ATS_URL
              name: alfresco-infrastructure
        image: quay.io/alfresco/alfresco-elasticsearch-live-indexing-path:3.2.0.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 60
        name: alfresco-search-enterprise-path
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 60
        resources:
          limits:
            cpu: "2"
            memory: 2048Mi
          requests:
            cpu: "0.5"
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        runAsUser: 33099
      serviceAccountName: alfresco-search-enterprise-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: imagemagick
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-imagemagick
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: imagemagick
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.alfresco.org/config-imagemagick: 566aba8e50a56d4e04236474beef22ea5abced2c1d2362005bf62385e4e3dee4
        checksum.alfresco.org/secret-messagebroker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: imagemagick
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-imagemagick
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 10
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-imagemagick
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - env:
        - name: FILE_STORE_URL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: ACTIVEMQ_URL
          value: $(BROKER_URL)
        - name: ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        envFrom:
        - configMapRef:
            name: alfresco-content-services-imagemagick-configmap
        - secretRef:
            name: amazon-mq-broker-secret
        image: alfresco/alfresco-imagemagick:3.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: alfresco-transform-service
        ports:
        - containerPort: 8090
        readinessProbe:
          httpGet:
            path: /ready
            port: 8090
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: 250m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 33002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: libreoffice
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-libreoffice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: libreoffice
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.alfresco.org/config-libreoffice: ba3050ad9def6f86804f8a2519245fe11c64069bc4887aa649189cddeaea96f8
        checksum.alfresco.org/secret-messagebroker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: libreoffice
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-libreoffice
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 10
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-libreoffice
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - env:
        - name: FILE_STORE_URL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: ACTIVEMQ_URL
          value: $(BROKER_URL)
        - name: ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        envFrom:
        - configMapRef:
            name: alfresco-content-services-libreoffice-configmap
        - secretRef:
            name: amazon-mq-broker-secret
        image: alfresco/alfresco-libreoffice:3.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: alfresco-transform-service
        ports:
        - containerPort: 8090
        readinessProbe:
          httpGet:
            path: /ready
            port: 8090
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: 250m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 33003
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pdfrenderer
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-pdfrenderer
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: pdfrenderer
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.alfresco.org/config-pdfrenderer: 840c990299f6a97eac592f0391f94c6411b3830f0c32279bb6b61ee8164347cd
        checksum.alfresco.org/secret-messagebroker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: pdfrenderer
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-pdfrenderer
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 10
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-pdfrenderer
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - env:
        - name: ACTIVEMQ_URL
          value: $(BROKER_URL)
        - name: ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        envFrom:
        - configMapRef:
            name: alfresco-content-services-pdfrenderer-configmap
        - secretRef:
            name: amazon-mq-broker-secret
        image: alfresco/alfresco-pdf-renderer:3.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: alfresco-transform-service
        ports:
        - containerPort: 8090
        readinessProbe:
          httpGet:
            path: /ready
            port: 8090
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 33001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    checkov.io/skip1: CKV_K8S_20=Requires APPS-1832
    checkov.io/skip2: CKV_K8S_23=Requires APPS-1832
    checkov.io/skip3: CKV_K8S_40=Requires APPS-1832
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: share
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: share-0.2.1
  name: alfresco-content-services-share
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: share
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: share
    spec:
      containers:
      - env:
        - name: CSRF_FILTER_REFERER
          value: https://hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk/.*\|https://share.hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk/.*\|https://alf-sfs.dev.delius-core.hmpps-preproduction.modernisation-platform.service.justice.gov.uk/.*
        - name: CSRF_FILTER_ORIGIN
          value: https://hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk,https://share.hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk,https://alf-sfs.dev.delius-core.hmpps-preproduction.modernisation-platform.service.justice.gov.uk
        - name: BASEURL
          value: https://hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk
        - name: JAVA_OPTS
          value: -Dalfresco.proxy=$BASEURL
        - name: REPO_HOST
          valueFrom:
            configMapKeyRef:
              key: repo_svc_name
              name: alfresco-infrastructure
        - name: REPO_PORT
          valueFrom:
            configMapKeyRef:
              key: repo_svc_port
              name: alfresco-infrastructure
        - name: CATALINA_OPTS
          value: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
        image: 754256621582.dkr.ecr.eu-west-2.amazonaws.com/hmpps-migration/alfresco-share:release_7.3.2_elasticsearch-r5.0.2-chart-7.0.3-share-latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /share
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
        name: alfresco-share
        ports:
        - containerPort: 8005
          name: tomcat-shutdown
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /share
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "4"
            memory: 2000Mi
          requests:
            cpu: "1"
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts: []
      imagePullSecrets:
      - name: quay-registry-secret
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: share-sa
      volumes: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tika
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-tika
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: tika
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.alfresco.org/config-tika: 564e1cd2db773fdf247d8186115851e4b9ebb11ba072d2e7f410affd3da74287
        checksum.alfresco.org/secret-messagebroker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: tika
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-tika
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 10
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-tika
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - env:
        - name: FILE_STORE_URL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: ACTIVEMQ_URL
          value: $(BROKER_URL)
        - name: ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        envFrom:
        - configMapRef:
            name: alfresco-content-services-tika-configmap
        - secretRef:
            name: amazon-mq-broker-secret
        image: alfresco/alfresco-tika:3.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 10
        name: alfresco-transform-service
        ports:
        - containerPort: 8090
        readinessProbe:
          httpGet:
            path: /ready
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: 250m
            memory: 600Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 33004
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: transform-misc
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-transform-misc
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: transform-misc
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.alfresco.org/config-transform-misc: f44290e592e0ee47adbb610e8a5cab7c8dcc84383fb2e3fad80e917c71b245d2
        checksum.alfresco.org/secret-messagebroker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: transform-misc
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-transform-misc
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 10
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-transform-misc
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - env:
        - name: FILE_STORE_URL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: ACTIVEMQ_URL
          value: $(BROKER_URL)
        - name: ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        envFrom:
        - configMapRef:
            name: alfresco-content-services-transform-misc-configmap
        - secretRef:
            name: amazon-mq-broker-secret
        image: alfresco/alfresco-transform-misc:3.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
        name: alfresco-transform-service
        ports:
        - containerPort: 8090
        readinessProbe:
          httpGet:
            path: /ready
            port: 8090
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 33006
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: transform-router
    app.kubernetes.io/version: 4.0.1
    helm.sh/chart: alfresco-transform-service-0.3.2
  name: alfresco-content-services-transform-router
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: transform-router
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.alfresco.org/config-transform-router: cf7203bc6f70a192f5c3f60c603ba28aef71c9f8d3463e909bb88d47b13e0dd6
        checksum.alfresco.org/secret-messagebroker: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/name: transform-router
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-transform-router
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 10
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alfresco-content-services-transform-router
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - env:
        - name: SPRING_ACTIVEMQ_POOL_ENABLED
          value: "true"
        - name: SPRING_ACTIVEMQ_POOL_MAXCONNECTIONS
          value: "100"
        - name: SPRING_ACTIVEMQ_POOL_IDLE_TIMEOUT
          value: "30000"
        - name: SPRING_ACTIVEMQ_POOL_EXPIRY_TIMEOUT
          value: "60000"
        - name: FILE_STORE_URL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: ACTIVEMQ_URL
          value: $(BROKER_URL)
        - name: ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        envFrom:
        - configMapRef:
            name: alfresco-content-services-transform-router-configmap
        - secretRef:
            name: amazon-mq-broker-secret
        image: quay.io/alfresco/alfresco-transform-router:2.1.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8095
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 10
        name: alfresco-transform-service
        ports:
        - containerPort: 8095
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8095
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 33016
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alfresco-search-enterprise-mediation
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: indexing-mediation
      app.kubernetes.io/instance: alfresco-content-services
      app.kubernetes.io/name: alfresco-search-enterprise
  serviceName: alfresco-search-enterprise-mediation
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: indexing-mediation
        app.kubernetes.io/instance: alfresco-content-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: alfresco-search-enterprise
        app.kubernetes.io/version: 4.0.0.1
        helm.sh/chart: alfresco-search-enterprise-3.0.3
    spec:
      containers:
      - env:
        - name: SPRING_ACTIVEMQ_POOL_ENABLED
          value: "true"
        - name: SPRING_ACTIVEMQ_POOL_MAX_CONNECTIONS
          value: "100"
        - name: SPRING_ACTIVEMQ_POOL_IDLE_TIMEOUT
          value: "30000"
        - name: SPRING_ACTIVEMQ_POOL_EXPIRY_TIMEOUT
          value: "60000"
        - name: JAVA_OPTS
          value: -Dspring.activemq.packages.trustAll=true
        - name: ALFRESCO_SHAREDFILESTORE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: SFS_URL_API
              name: alfresco-infrastructure
        - name: BROKER_USERNAME
          valueFrom:
            secretKeyRef:
              key: BROKER_USERNAME
              name: amazon-mq-broker-secret
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: BROKER_PASSWORD
              name: amazon-mq-broker-secret
        - name: BROKER_URL
          valueFrom:
            configMapKeyRef:
              key: BROKER_URL
              name: alfresco-infrastructure
        - name: SPRING_ACTIVEMQ_BROKERURL
          value: $(BROKER_URL)
        - name: SPRING_ACTIVEMQ_USER
          value: $(BROKER_USERNAME)
        - name: SPRING_ACTIVEMQ_PASSWORD
          value: $(BROKER_PASSWORD)
        - name: ELASTICSEARCH_INDEXNAME
          value: alfresco
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_REFRESHTIME
          value: 0 0 * * * *
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_ENABLED
          value: "true"
        - name: ALFRESCO_PATHINDEXINGCOMPONENT_ENABLED
          value: "true"
        - name: ALFRESCO_ACCEPTEDCONTENTMEDIATYPESCACHE_BASEURL
          valueFrom:
            configMapKeyRef:
              key: ATS_URL
              name: alfresco-infrastructure
        image: quay.io/alfresco/alfresco-elasticsearch-live-indexing-mediation:3.2.0.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 60
        name: alfresco-search-enterprise-mediation
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 60
        resources:
          limits:
            cpu: "2"
            memory: 2048Mi
          requests:
            cpu: "0.5"
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - NET_RAW
            - ALL
          runAsNonRoot: true
      imagePullSecrets:
      - name: quay-registry-secret
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        runAsUser: 33099
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    checkov.io/skip1: CKV_K8S_153=We're filtering out snippet in named template
    external-dns.alpha.kubernetes.io/aws-weight: "100"
    external-dns.alpha.kubernetes.io/set-identifier: alfresco-content-services-alfresco-repository-hmpps-delius-alfresco-dev-green
    kubernetes.io/ingress.class: default
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-body-size: 5g
    nginx.ingress.kubernetes.io/proxy-read-timeout: "200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "200"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ ^/.*/(wc)?s(ervice)?/api/solr/.*$ {return 403;}
      location ~ ^/.*/proxy/.*/api/solr/.*$ {return 403;}
      location ~ ^/.*/-default-/proxy/.*/api/.*$ {return 403;}
      location ~ ^/.*/s/prometheus$ {return 403;}
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: alfrescoRepo
    nginx.ingress.kubernetes.io/whitelist-source-range: 3.11.29.246,18.130.165.209,35.178.35.115,35.178.209.113,3.8.51.207,35.177.252.54,35.176.93.186/32,35.177.125.252/32,35.177.137.160/32,81.134.202.29/32,51.149.250.0/24,51.149.251.0/24,213.121.161.112/28,217.33.148.210/32,13.43.9.198/32,13.42.163.245/32,18.132.208.127/32,51.149.249.0/29,51.149.249.32/29,194.33.192.0/25,194.33.193.0/25,194.33.196.0/25,194.33.197.0/25,195.59.75.0/24,194.33.248.0/29,194.33.249.0/29,62.25.106.209/32,195.92.40.49/32,62.25.109.197/32,195.92.38.16/28,212.137.36.230/32,78.33.10.50/31,78.33.10.52/30,78.33.10.56/30,78.33.10.60/32,78.33.32.99/32,78.33.32.100/30,78.33.32.104/30,78.33.32.108/32,83.98.63.176/29,194.75.210.216/29,217.138.45.109/32,217.138.45.110/32,34.241.149.106/32,52.210.79.20/32,54.228.134.38/32
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alfresco-repository
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: alfresco-repository-0.1.2
  name: alfresco-content-services-alfresco-repository
spec:
  ingressClassName: default
  rules:
  - host: hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk
    http:
      paths:
      - backend:
          service:
            name: alfresco-content-services-alfresco-repository
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: alfresco-content-services-alfresco-repository
            port:
              number: 80
        path: /api-explorer
        pathType: Prefix
  tls:
  - hosts:
    - hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    checkov.io/skip1: CKV_K8S_153=We're filtering out snippet in named template
    external-dns.alpha.kubernetes.io/aws-weight: "100"
    external-dns.alpha.kubernetes.io/set-identifier: alfresco-content-services-share-hmpps-delius-alfresco-dev-green
    kubernetes.io/ingress.class: default
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri = "/") {
        return 301 /share/page/;
      }
    nginx.ingress.kubernetes.io/proxy-body-size: 5g
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ ^/.*/(wc)?s(ervice)?/api/solr/.*$ {return 403;}
      location ~ ^/.*/proxy/.*/api/solr/.*$ {return 403;}
      location ~ ^/.*/-default-/proxy/.*/api/.*$ {return 403;}
      location ~ ^/.*/s/prometheus$ {return 403;}
    nginx.ingress.kubernetes.io/session-cookie-expires: "604800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "604800"
    nginx.ingress.kubernetes.io/session-cookie-name: alfrescoShare
    nginx.ingress.kubernetes.io/session-cookie-path: /share
    nginx.ingress.kubernetes.io/whitelist-source-range: 3.11.29.246,18.130.165.209,35.178.35.115,35.178.209.113,3.8.51.207,35.177.252.54,35.176.93.186/32,35.177.125.252/32,35.177.137.160/32,81.134.202.29/32,51.149.250.0/24,51.149.251.0/24,213.121.161.112/28,217.33.148.210/32,13.43.9.198/32,13.42.163.245/32,18.132.208.127/32,51.149.249.0/29,51.149.249.32/29,194.33.192.0/25,194.33.193.0/25,194.33.196.0/25,194.33.197.0/25,195.59.75.0/24,194.33.248.0/29,194.33.249.0/29,62.25.106.209/32,195.92.40.49/32,62.25.109.197/32,195.92.38.16/28,212.137.36.230/32,78.33.10.50/31,78.33.10.52/30,78.33.10.56/30,78.33.10.60/32,78.33.32.99/32,78.33.32.100/30,78.33.32.104/30,78.33.32.108/32,83.98.63.176/29,194.75.210.216/29,217.138.45.109/32,217.138.45.110/32,34.241.149.106/32,52.210.79.20/32,54.228.134.38/32
  labels:
    app.kubernetes.io/instance: alfresco-content-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: share
    app.kubernetes.io/version: 23.1.1
    helm.sh/chart: share-0.2.1
  name: alfresco-content-services-share
spec:
  ingressClassName: default
  rules:
  - host: share.hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk
    http:
      paths:
      - backend:
          service:
            name: alfresco-content-service-share
            port:
              number: 80
        path: /
        pathType: Prefix
      - backend:
          service:
            name: alfresco-content-services-share
            port:
              number: 80
        path: /share/page/
        pathType: Prefix
  tls:
  - hosts:
    - share.hmpps-delius-alfresco-dev.apps.live.cloud-platform.service.justice.gov.uk
    secretName: share-ingress-cert
